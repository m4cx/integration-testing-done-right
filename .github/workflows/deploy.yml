name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build presentation
      run: npm run build
      
    # Main branch deployment (production)
    - name: Setup Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'
        
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      id: deployment
      uses: actions/deploy-pages@v4
      
    # PR preview deployment
    - name: Deploy PR Preview
      if: github.event_name == 'pull_request'
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        destination_dir: pr-${{ github.event.number }}
        
    - name: Comment PR with preview URL
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = context.issue.number;
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          const previewUrl = `https://${owner}.github.io/${repo}/pr-${prNumber}/`;
          
          // Find existing preview comment
          const comments = await github.rest.issues.listComments({
            owner,
            repo,
            issue_number: prNumber,
          });
          
          const existingComment = comments.data.find(comment => 
            comment.user.login === 'github-actions[bot]' && 
            comment.body.includes('ðŸ“– Preview deployment')
          );
          
          const commentBody = `ðŸ“– **Preview deployment** for this PR is available at:
          
          ðŸ”— ${previewUrl}
          
          _This preview will be updated automatically when you push new commits._`;
          
          if (existingComment) {
            await github.rest.issues.updateComment({
              owner,
              repo,
              comment_id: existingComment.id,
              body: commentBody
            });
          } else {
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: prNumber,
              body: commentBody
            });
          }

# Grant GITHUB_TOKEN the permissions required to make a Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

# Allow concurrent PR deployments but only one main deployment at a time
concurrency:
  group: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.number) || 'pages' }}
  cancel-in-progress: false